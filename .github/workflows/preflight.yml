name: preflight

on: [pull_request]

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Root Dependencies
        run: |
          npm install
      - name: Install Notifier dependencies
        working-directory: packages/notifier
        run: |
          npm install
      - name: Install Webc dependencies
        working-directory: packages/webc
        run: |
          npm install
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ github.sha }}
  jest:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ github.sha }}
      - name: Run Jest
        uses: landon-martin/code-coverage-commenter@v0.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          coverage-command: "npm run coverage"
          comment-title: "Source Unit Test Coverage Report"
  lint:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ github.sha }}
      - name: Run Lint
        run: |
          npm run lint
  e2e:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ github.sha }}
      - name: Install extra tools
        run: |
          npm install playwright
          npm install -g firebase-tools
      - name: Install Test dependencies
        working-directory: packages/e2e-tests
        run: |
          npm install
      - name: Switch to staging
        run: |
          npm run use-env -- staging --token "${{ secrets.STAGING_FIREBASE_TOKEN }}"
      - name: Host server
        working-directory: packages/webc
        run: |
          npm run serve -- --token "${{ secrets.STAGING_FIREBASE_TOKEN }}" --non-interactive &
      - name: Run tests
        working-directory: packages/e2e-tests
        env:
          LANFLIX_USERNAME: ${{ secrets.STAGING_USERNAME }}
          LANFLIX_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
        run: |
          npm run test:headless -- --verbose --steps
